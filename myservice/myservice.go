// Code generated by gowsdl DO NOT EDIT.

package myservice

import (
	"context"
	"encoding/xml"
	"github.com/hooklift/gowsdl/soap"
	"time"
)

// against "unused imports"
var _ time.Time
var _ xml.Name

type AnyType struct {
	InnerXML string `xml:",innerxml"`
}

type AnyURI string

type NCName string

type GetPassword struct {
	XMLName xml.Name `xml:"http://bsestarmf.in/ getPassword"`

	UserId *string `xml:"UserId,omitempty" json:"UserId,omitempty"`

	Password *string `xml:"Password,omitempty" json:"Password,omitempty"`

	PassKey *string `xml:"PassKey,omitempty" json:"PassKey,omitempty"`
}

type GetPasswordResponse struct {
	XMLName xml.Name `xml:"http://bsestarmf.in/ getPasswordResponse"`

	GetPasswordResult *string `xml:"getPasswordResult,omitempty" json:"getPasswordResult,omitempty"`
}

type OrderEntry struct {
	XMLName xml.Name `xml:"http://bsestarmf.in/ OrderEntry"`

	Data *OrderData `xml:"data,omitempty" json:"data,omitempty"`
}

type OrderEntryResponse struct {
	XMLName xml.Name `xml:"http://bsestarmf.in/ OrderEntryResponse"`

	OrderEntryResult *string `xml:"OrderEntryResult,omitempty" json:"OrderEntryResult,omitempty"`
}

type OrderEntryParam struct {
	XMLName xml.Name `xml:"http://bsestarmf.in/ orderEntryParam"`

	TransCode *string `xml:"TransCode,omitempty" json:"TransCode,omitempty"`

	TransNo *string `xml:"TransNo,omitempty" json:"TransNo,omitempty"`

	OrderId *string `xml:"OrderId,omitempty" json:"OrderId,omitempty"`

	UserID *string `xml:"UserID,omitempty" json:"UserID,omitempty"`

	MemberId *string `xml:"MemberId,omitempty" json:"MemberId,omitempty"`

	ClientCode *string `xml:"ClientCode,omitempty" json:"ClientCode,omitempty"`

	SchemeCd *string `xml:"SchemeCd,omitempty" json:"SchemeCd,omitempty"`

	BuySell *string `xml:"BuySell,omitempty" json:"BuySell,omitempty"`

	BuySellType *string `xml:"BuySellType,omitempty" json:"BuySellType,omitempty"`

	DPTxn *string `xml:"DPTxn,omitempty" json:"DPTxn,omitempty"`

	OrderVal *string `xml:"OrderVal,omitempty" json:"OrderVal,omitempty"`

	Qty *string `xml:"Qty,omitempty" json:"Qty,omitempty"`

	AllRedeem *string `xml:"AllRedeem,omitempty" json:"AllRedeem,omitempty"`

	FolioNo *string `xml:"FolioNo,omitempty" json:"FolioNo,omitempty"`

	Remarks *string `xml:"Remarks,omitempty" json:"Remarks,omitempty"`

	KYCStatus *string `xml:"KYCStatus,omitempty" json:"KYCStatus,omitempty"`

	RefNo *string `xml:"RefNo,omitempty" json:"RefNo,omitempty"`

	SubBrCode *string `xml:"SubBrCode,omitempty" json:"SubBrCode,omitempty"`

	EUIN *string `xml:"EUIN,omitempty" json:"EUIN,omitempty"`

	EUINVal *string `xml:"EUINVal,omitempty" json:"EUINVal,omitempty"`

	MinRedeem *string `xml:"MinRedeem,omitempty" json:"MinRedeem,omitempty"`

	DPC *string `xml:"DPC,omitempty" json:"DPC,omitempty"`

	IPAdd *string `xml:"IPAdd,omitempty" json:"IPAdd,omitempty"`

	Password *string `xml:"Password,omitempty" json:"Password,omitempty"`

	PassKey *string `xml:"PassKey,omitempty" json:"PassKey,omitempty"`

	Parma1 *string `xml:"Parma1,omitempty" json:"Parma1,omitempty"`

	Param2 *string `xml:"Param2,omitempty" json:"Param2,omitempty"`

	Param3 *string `xml:"Param3,omitempty" json:"Param3,omitempty"`

	MobileNo *string `xml:"MobileNo,omitempty" json:"MobileNo,omitempty"`

	EmailID *string `xml:"EmailID,omitempty" json:"EmailID,omitempty"`

	MandateID *string `xml:"MandateID,omitempty" json:"MandateID,omitempty"`

	Filler1 *string `xml:"Filler1,omitempty" json:"Filler1,omitempty"`

	Filler2 *string `xml:"Filler2,omitempty" json:"Filler2,omitempty"`

	Filler3 *string `xml:"Filler3,omitempty" json:"Filler3,omitempty"`

	Filler4 *string `xml:"Filler4,omitempty" json:"Filler4,omitempty"`

	Filler5 *string `xml:"Filler5,omitempty" json:"Filler5,omitempty"`

	Filler6 *string `xml:"Filler6,omitempty" json:"Filler6,omitempty"`
}

type OrderEntryParamResponse struct {
	XMLName xml.Name `xml:"http://bsestarmf.in/ orderEntryParamResponse"`

	OrderEntryParamResult *string `xml:"orderEntryParamResult,omitempty" json:"orderEntryParamResult,omitempty"`
}

type SpreadOrderEntry struct {
	XMLName xml.Name `xml:"http://bsestarmf.in/ spreadOrderEntry"`

	Data *SpreadOrder `xml:"data,omitempty" json:"data,omitempty"`
}

type SpreadOrderEntryResponse struct {
	XMLName xml.Name `xml:"http://bsestarmf.in/ spreadOrderEntryResponse"`

	SpreadOrderEntryResult *string `xml:"spreadOrderEntryResult,omitempty" json:"spreadOrderEntryResult,omitempty"`
}

type SpreadOrderEntryParam struct {
	XMLName xml.Name `xml:"http://bsestarmf.in/ spreadOrderEntryParam"`

	TransactionCode *string `xml:"TransactionCode,omitempty" json:"TransactionCode,omitempty"`

	UniqueRefNo *string `xml:"UniqueRefNo,omitempty" json:"UniqueRefNo,omitempty"`

	OrderID *string `xml:"OrderID,omitempty" json:"OrderID,omitempty"`

	UserID *string `xml:"UserID,omitempty" json:"UserID,omitempty"`

	MemberId *string `xml:"MemberId,omitempty" json:"MemberId,omitempty"`

	ClientCode *string `xml:"ClientCode,omitempty" json:"ClientCode,omitempty"`

	SchemeCode *string `xml:"SchemeCode,omitempty" json:"SchemeCode,omitempty"`

	BuySell *string `xml:"BuySell,omitempty" json:"BuySell,omitempty"`

	BuySellType *string `xml:"BuySellType,omitempty" json:"BuySellType,omitempty"`

	DPTxn *string `xml:"DPTxn,omitempty" json:"DPTxn,omitempty"`

	OrderValue *string `xml:"OrderValue,omitempty" json:"OrderValue,omitempty"`

	RedemptionAmt *string `xml:"RedemptionAmt,omitempty" json:"RedemptionAmt,omitempty"`

	AllUnitFlag *string `xml:"AllUnitFlag,omitempty" json:"AllUnitFlag,omitempty"`

	RedeemDate *string `xml:"RedeemDate,omitempty" json:"RedeemDate,omitempty"`

	FolioNo *string `xml:"FolioNo,omitempty" json:"FolioNo,omitempty"`

	Remarks *string `xml:"Remarks,omitempty" json:"Remarks,omitempty"`

	KYCStatus *string `xml:"KYCStatus,omitempty" json:"KYCStatus,omitempty"`

	RefNo *string `xml:"RefNo,omitempty" json:"RefNo,omitempty"`

	SubBroCode *string `xml:"SubBroCode,omitempty" json:"SubBroCode,omitempty"`

	EUIN *string `xml:"EUIN,omitempty" json:"EUIN,omitempty"`

	EUINVal *string `xml:"EUINVal,omitempty" json:"EUINVal,omitempty"`

	MinRedeem *string `xml:"MinRedeem,omitempty" json:"MinRedeem,omitempty"`

	DPC *string `xml:"DPC,omitempty" json:"DPC,omitempty"`

	IPAddress *string `xml:"IPAddress,omitempty" json:"IPAddress,omitempty"`

	Password *string `xml:"Password,omitempty" json:"Password,omitempty"`

	PassKey *string `xml:"PassKey,omitempty" json:"PassKey,omitempty"`

	Param1 *string `xml:"Param1,omitempty" json:"Param1,omitempty"`

	Param2 *string `xml:"Param2,omitempty" json:"Param2,omitempty"`

	Param3 *string `xml:"Param3,omitempty" json:"Param3,omitempty"`

	MobileNo *string `xml:"MobileNo,omitempty" json:"MobileNo,omitempty"`

	EmailID *string `xml:"EmailID,omitempty" json:"EmailID,omitempty"`

	Filler1 *string `xml:"Filler1,omitempty" json:"Filler1,omitempty"`

	Filler2 *string `xml:"Filler2,omitempty" json:"Filler2,omitempty"`

	Filler3 *string `xml:"Filler3,omitempty" json:"Filler3,omitempty"`

	Filler4 *string `xml:"Filler4,omitempty" json:"Filler4,omitempty"`

	Filler5 *string `xml:"Filler5,omitempty" json:"Filler5,omitempty"`

	Filler6 *string `xml:"Filler6,omitempty" json:"Filler6,omitempty"`
}

type SpreadOrderEntryParamResponse struct {
	XMLName xml.Name `xml:"http://bsestarmf.in/ spreadOrderEntryParamResponse"`

	SpreadOrderEntryParamResult *string `xml:"spreadOrderEntryParamResult,omitempty" json:"spreadOrderEntryParamResult,omitempty"`
}

type SwitchOrderEntry struct {
	XMLName xml.Name `xml:"http://bsestarmf.in/ switchOrderEntry"`

	Data *SwitchOrder `xml:"data,omitempty" json:"data,omitempty"`
}

type SwitchOrderEntryResponse struct {
	XMLName xml.Name `xml:"http://bsestarmf.in/ switchOrderEntryResponse"`

	SwitchOrderEntryResult *string `xml:"switchOrderEntryResult,omitempty" json:"switchOrderEntryResult,omitempty"`
}

type SwitchOrderEntryParam struct {
	XMLName xml.Name `xml:"http://bsestarmf.in/ switchOrderEntryParam"`

	TransCode *string `xml:"TransCode,omitempty" json:"TransCode,omitempty"`

	TransNo *string `xml:"TransNo,omitempty" json:"TransNo,omitempty"`

	OrderId *string `xml:"OrderId,omitempty" json:"OrderId,omitempty"`

	UserId *string `xml:"UserId,omitempty" json:"UserId,omitempty"`

	MemberId *string `xml:"MemberId,omitempty" json:"MemberId,omitempty"`

	ClientCode *string `xml:"ClientCode,omitempty" json:"ClientCode,omitempty"`

	FromSchemeCd *string `xml:"FromSchemeCd,omitempty" json:"FromSchemeCd,omitempty"`

	ToSchemeCd *string `xml:"ToSchemeCd,omitempty" json:"ToSchemeCd,omitempty"`

	BuySell *string `xml:"BuySell,omitempty" json:"BuySell,omitempty"`

	BuySellType *string `xml:"BuySellType,omitempty" json:"BuySellType,omitempty"`

	DPTxn *string `xml:"DPTxn,omitempty" json:"DPTxn,omitempty"`

	OrderVal *string `xml:"OrderVal,omitempty" json:"OrderVal,omitempty"`

	SwitchUnits *string `xml:"SwitchUnits,omitempty" json:"SwitchUnits,omitempty"`

	AllUnitsFlag *string `xml:"AllUnitsFlag,omitempty" json:"AllUnitsFlag,omitempty"`

	FolioNo *string `xml:"FolioNo,omitempty" json:"FolioNo,omitempty"`

	Remarks *string `xml:"Remarks,omitempty" json:"Remarks,omitempty"`

	KYCStatus *string `xml:"KYCStatus,omitempty" json:"KYCStatus,omitempty"`

	SubBrCode *string `xml:"SubBrCode,omitempty" json:"SubBrCode,omitempty"`

	EUIN *string `xml:"EUIN,omitempty" json:"EUIN,omitempty"`

	EUINVal *string `xml:"EUINVal,omitempty" json:"EUINVal,omitempty"`

	MinRedeem *string `xml:"MinRedeem,omitempty" json:"MinRedeem,omitempty"`

	IPAdd *string `xml:"IPAdd,omitempty" json:"IPAdd,omitempty"`

	Password *string `xml:"Password,omitempty" json:"Password,omitempty"`

	PassKey *string `xml:"PassKey,omitempty" json:"PassKey,omitempty"`

	Parma1 *string `xml:"Parma1,omitempty" json:"Parma1,omitempty"`

	Param2 *string `xml:"Param2,omitempty" json:"Param2,omitempty"`

	Param3 *string `xml:"Param3,omitempty" json:"Param3,omitempty"`

	Filler1 *string `xml:"Filler1,omitempty" json:"Filler1,omitempty"`

	Filler2 *string `xml:"Filler2,omitempty" json:"Filler2,omitempty"`

	Filler3 *string `xml:"Filler3,omitempty" json:"Filler3,omitempty"`

	Filler4 *string `xml:"Filler4,omitempty" json:"Filler4,omitempty"`

	Filler5 *string `xml:"Filler5,omitempty" json:"Filler5,omitempty"`

	Filler6 *string `xml:"Filler6,omitempty" json:"Filler6,omitempty"`
}

type SwitchOrderEntryParamResponse struct {
	XMLName xml.Name `xml:"http://bsestarmf.in/ switchOrderEntryParamResponse"`

	SwitchOrderEntryParamResult *string `xml:"switchOrderEntryParamResult,omitempty" json:"switchOrderEntryParamResult,omitempty"`
}

type SipOrderEntry struct {
	XMLName xml.Name `xml:"http://bsestarmf.in/ sipOrderEntry"`

	Data *SipOrder `xml:"data,omitempty" json:"data,omitempty"`
}

type SipOrderEntryResponse struct {
	XMLName xml.Name `xml:"http://bsestarmf.in/ sipOrderEntryResponse"`

	SipOrderEntryResult *string `xml:"sipOrderEntryResult,omitempty" json:"sipOrderEntryResult,omitempty"`
}

type SipOrderEntryParam struct {
	XMLName xml.Name `xml:"http://bsestarmf.in/ sipOrderEntryParam"`

	TransactionCode *string `xml:"TransactionCode,omitempty" json:"TransactionCode,omitempty"`

	UniqueRefNo *string `xml:"UniqueRefNo,omitempty" json:"UniqueRefNo,omitempty"`

	SchemeCode *string `xml:"SchemeCode,omitempty" json:"SchemeCode,omitempty"`

	MemberCode *string `xml:"MemberCode,omitempty" json:"MemberCode,omitempty"`

	ClientCode *string `xml:"ClientCode,omitempty" json:"ClientCode,omitempty"`

	UserID *string `xml:"UserID,omitempty" json:"UserID,omitempty"`

	InternalRefNo *string `xml:"InternalRefNo,omitempty" json:"InternalRefNo,omitempty"`

	TransMode *string `xml:"TransMode,omitempty" json:"TransMode,omitempty"`

	DpTxnMode *string `xml:"DpTxnMode,omitempty" json:"DpTxnMode,omitempty"`

	StartDate *string `xml:"StartDate,omitempty" json:"StartDate,omitempty"`

	FrequencyType *string `xml:"FrequencyType,omitempty" json:"FrequencyType,omitempty"`

	FrequencyAllowed *string `xml:"FrequencyAllowed,omitempty" json:"FrequencyAllowed,omitempty"`

	InstallmentAmount *string `xml:"InstallmentAmount,omitempty" json:"InstallmentAmount,omitempty"`

	NoOfInstallment *string `xml:"NoOfInstallment,omitempty" json:"NoOfInstallment,omitempty"`

	Remarks *string `xml:"Remarks,omitempty" json:"Remarks,omitempty"`

	FolioNo *string `xml:"FolioNo,omitempty" json:"FolioNo,omitempty"`

	FirstOrderFlag *string `xml:"FirstOrderFlag,omitempty" json:"FirstOrderFlag,omitempty"`

	SubberCode *string `xml:"SubberCode,omitempty" json:"SubberCode,omitempty"`

	Euin *string `xml:"Euin,omitempty" json:"Euin,omitempty"`

	EuinVal *string `xml:"EuinVal,omitempty" json:"EuinVal,omitempty"`

	DPC *string `xml:"DPC,omitempty" json:"DPC,omitempty"`

	RegId *string `xml:"RegId,omitempty" json:"RegId,omitempty"`

	IPAdd *string `xml:"IPAdd,omitempty" json:"IPAdd,omitempty"`

	Password *string `xml:"Password,omitempty" json:"Password,omitempty"`

	PassKey *string `xml:"PassKey,omitempty" json:"PassKey,omitempty"`

	Param1 *string `xml:"Param1,omitempty" json:"Param1,omitempty"`

	Param2 *string `xml:"Param2,omitempty" json:"Param2,omitempty"`

	Param3 *string `xml:"Param3,omitempty" json:"Param3,omitempty"`

	Filler1 *string `xml:"Filler1,omitempty" json:"Filler1,omitempty"`

	Filler2 *string `xml:"Filler2,omitempty" json:"Filler2,omitempty"`

	Filler3 *string `xml:"Filler3,omitempty" json:"Filler3,omitempty"`

	Filler4 *string `xml:"Filler4,omitempty" json:"Filler4,omitempty"`

	Filler5 *string `xml:"Filler5,omitempty" json:"Filler5,omitempty"`

	Filler6 *string `xml:"Filler6,omitempty" json:"Filler6,omitempty"`
}

type SipOrderEntryParamResponse struct {
	XMLName xml.Name `xml:"http://bsestarmf.in/ sipOrderEntryParamResponse"`

	SipOrderEntryParamResult *string `xml:"sipOrderEntryParamResult,omitempty" json:"sipOrderEntryParamResult,omitempty"`
}

type XsipOrderEntry struct {
	XMLName xml.Name `xml:"http://bsestarmf.in/ xsipOrderEntry"`

	Data *XsipOrder `xml:"data,omitempty" json:"data,omitempty"`
}

type XsipOrderEntryResponse struct {
	XMLName xml.Name `xml:"http://bsestarmf.in/ xsipOrderEntryResponse"`

	XsipOrderEntryResult *string `xml:"xsipOrderEntryResult,omitempty" json:"xsipOrderEntryResult,omitempty"`
}

type XsipOrderEntryParam struct {
	XMLName xml.Name `xml:"http://bsestarmf.in/ xsipOrderEntryParam"`

	TransactionCode *string `xml:"TransactionCode,omitempty" json:"TransactionCode,omitempty"`

	UniqueRefNo *string `xml:"UniqueRefNo,omitempty" json:"UniqueRefNo,omitempty"`

	SchemeCode *string `xml:"SchemeCode,omitempty" json:"SchemeCode,omitempty"`

	MemberCode *string `xml:"MemberCode,omitempty" json:"MemberCode,omitempty"`

	ClientCode *string `xml:"ClientCode,omitempty" json:"ClientCode,omitempty"`

	UserId *string `xml:"UserId,omitempty" json:"UserId,omitempty"`

	InternalRefNo *string `xml:"InternalRefNo,omitempty" json:"InternalRefNo,omitempty"`

	TransMode *string `xml:"TransMode,omitempty" json:"TransMode,omitempty"`

	DpTxnMode *string `xml:"DpTxnMode,omitempty" json:"DpTxnMode,omitempty"`

	StartDate *string `xml:"StartDate,omitempty" json:"StartDate,omitempty"`

	FrequencyType *string `xml:"FrequencyType,omitempty" json:"FrequencyType,omitempty"`

	FrequencyAllowed *string `xml:"FrequencyAllowed,omitempty" json:"FrequencyAllowed,omitempty"`

	InstallmentAmount *string `xml:"InstallmentAmount,omitempty" json:"InstallmentAmount,omitempty"`

	NoOfInstallment *string `xml:"NoOfInstallment,omitempty" json:"NoOfInstallment,omitempty"`

	Remarks *string `xml:"Remarks,omitempty" json:"Remarks,omitempty"`

	FolioNo *string `xml:"FolioNo,omitempty" json:"FolioNo,omitempty"`

	FirstOrderFlag *string `xml:"FirstOrderFlag,omitempty" json:"FirstOrderFlag,omitempty"`

	Brokerage *string `xml:"Brokerage,omitempty" json:"Brokerage,omitempty"`

	MandateID *string `xml:"MandateID,omitempty" json:"MandateID,omitempty"`

	SubberCode *string `xml:"SubberCode,omitempty" json:"SubberCode,omitempty"`

	Euin *string `xml:"Euin,omitempty" json:"Euin,omitempty"`

	EuinVal *string `xml:"EuinVal,omitempty" json:"EuinVal,omitempty"`

	DPC *string `xml:"DPC,omitempty" json:"DPC,omitempty"`

	XsipRegID *string `xml:"XsipRegID,omitempty" json:"XsipRegID,omitempty"`

	IPAdd *string `xml:"IPAdd,omitempty" json:"IPAdd,omitempty"`

	Password *string `xml:"Password,omitempty" json:"Password,omitempty"`

	PassKey *string `xml:"PassKey,omitempty" json:"PassKey,omitempty"`

	Param1 *string `xml:"Param1,omitempty" json:"Param1,omitempty"`

	Param2 *string `xml:"Param2,omitempty" json:"Param2,omitempty"`

	Param3 *string `xml:"Param3,omitempty" json:"Param3,omitempty"`

	Filler1 *string `xml:"Filler1,omitempty" json:"Filler1,omitempty"`

	Filler2 *string `xml:"Filler2,omitempty" json:"Filler2,omitempty"`

	Filler3 *string `xml:"Filler3,omitempty" json:"Filler3,omitempty"`

	Filler4 *string `xml:"Filler4,omitempty" json:"Filler4,omitempty"`

	Filler5 *string `xml:"Filler5,omitempty" json:"Filler5,omitempty"`

	Filler6 *string `xml:"Filler6,omitempty" json:"Filler6,omitempty"`
}

type XsipOrderEntryParamResponse struct {
	XMLName xml.Name `xml:"http://bsestarmf.in/ xsipOrderEntryParamResponse"`

	XsipOrderEntryParamResult *string `xml:"xsipOrderEntryParamResult,omitempty" json:"xsipOrderEntryParamResult,omitempty"`
}

type Char int32

type Duration *Duration

type Guid string

type Base64Binary []byte

type Boolean bool

type byte int8

type DateTime soap.XSDDateTime

type Decimal float64

type Double float64

type Float float32

type int int32

type Long int64

type Short int16

type UnsignedByte byte

type UnsignedInt uint32

type UnsignedLong uint64

type UnsignedShort uint16

type OrderData struct {
	AllRedeem *string `xml:"AllRedeem,omitempty" json:"AllRedeem,omitempty"`

	BuySell *string `xml:"BuySell,omitempty" json:"BuySell,omitempty"`

	BuySellType *string `xml:"BuySellType,omitempty" json:"BuySellType,omitempty"`

	ClientCode *string `xml:"ClientCode,omitempty" json:"ClientCode,omitempty"`

	DPC *string `xml:"DPC,omitempty" json:"DPC,omitempty"`

	DPTxn *string `xml:"DPTxn,omitempty" json:"DPTxn,omitempty"`

	EUIN *string `xml:"EUIN,omitempty" json:"EUIN,omitempty"`

	EUINVal *string `xml:"EUINVal,omitempty" json:"EUINVal,omitempty"`

	EmailID *string `xml:"EmailID,omitempty" json:"EmailID,omitempty"`

	Filler1 *string `xml:"Filler1,omitempty" json:"Filler1,omitempty"`

	Filler2 *string `xml:"Filler2,omitempty" json:"Filler2,omitempty"`

	Filler3 *string `xml:"Filler3,omitempty" json:"Filler3,omitempty"`

	Filler4 *string `xml:"Filler4,omitempty" json:"Filler4,omitempty"`

	Filler5 *string `xml:"Filler5,omitempty" json:"Filler5,omitempty"`

	Filler6 *string `xml:"Filler6,omitempty" json:"Filler6,omitempty"`

	FolioNo *string `xml:"FolioNo,omitempty" json:"FolioNo,omitempty"`

	IPAdd *string `xml:"IPAdd,omitempty" json:"IPAdd,omitempty"`

	KYCStatus *string `xml:"KYCStatus,omitempty" json:"KYCStatus,omitempty"`

	MandateID *string `xml:"MandateID,omitempty" json:"MandateID,omitempty"`

	MemberId *string `xml:"MemberId,omitempty" json:"MemberId,omitempty"`

	MinRedeem *string `xml:"MinRedeem,omitempty" json:"MinRedeem,omitempty"`

	MobileNo *string `xml:"MobileNo,omitempty" json:"MobileNo,omitempty"`

	OrderId *string `xml:"OrderId,omitempty" json:"OrderId,omitempty"`

	OrderVal *string `xml:"OrderVal,omitempty" json:"OrderVal,omitempty"`

	Param1 *string `xml:"Param1,omitempty" json:"Param1,omitempty"`

	Param2 *string `xml:"Param2,omitempty" json:"Param2,omitempty"`

	Param3 *string `xml:"Param3,omitempty" json:"Param3,omitempty"`

	PassKey *string `xml:"PassKey,omitempty" json:"PassKey,omitempty"`

	Password *string `xml:"Password,omitempty" json:"Password,omitempty"`

	Qty *string `xml:"Qty,omitempty" json:"Qty,omitempty"`

	RefNo *string `xml:"RefNo,omitempty" json:"RefNo,omitempty"`

	Remarks *string `xml:"Remarks,omitempty" json:"Remarks,omitempty"`

	SchemeCd *string `xml:"SchemeCd,omitempty" json:"SchemeCd,omitempty"`

	SubBrCode *string `xml:"SubBrCode,omitempty" json:"SubBrCode,omitempty"`

	TransCode *string `xml:"TransCode,omitempty" json:"TransCode,omitempty"`

	TransNo *string `xml:"TransNo,omitempty" json:"TransNo,omitempty"`

	UserID *string `xml:"UserID,omitempty" json:"UserID,omitempty"`
}

type SpreadOrder struct {
	AllUnitFlag *string `xml:"AllUnitFlag,omitempty" json:"AllUnitFlag,omitempty"`

	BuySell *string `xml:"BuySell,omitempty" json:"BuySell,omitempty"`

	BuySellType *string `xml:"BuySellType,omitempty" json:"BuySellType,omitempty"`

	ClientCode *string `xml:"ClientCode,omitempty" json:"ClientCode,omitempty"`

	DPC *string `xml:"DPC,omitempty" json:"DPC,omitempty"`

	DPTxn *string `xml:"DPTxn,omitempty" json:"DPTxn,omitempty"`

	EUIN *string `xml:"EUIN,omitempty" json:"EUIN,omitempty"`

	EUINVal *string `xml:"EUINVal,omitempty" json:"EUINVal,omitempty"`

	EmailID *string `xml:"EmailID,omitempty" json:"EmailID,omitempty"`

	Filler1 *string `xml:"Filler1,omitempty" json:"Filler1,omitempty"`

	Filler2 *string `xml:"Filler2,omitempty" json:"Filler2,omitempty"`

	Filler3 *string `xml:"Filler3,omitempty" json:"Filler3,omitempty"`

	Filler4 *string `xml:"Filler4,omitempty" json:"Filler4,omitempty"`

	Filler5 *string `xml:"Filler5,omitempty" json:"Filler5,omitempty"`

	Filler6 *string `xml:"Filler6,omitempty" json:"Filler6,omitempty"`

	FolioNo *string `xml:"FolioNo,omitempty" json:"FolioNo,omitempty"`

	IPAdd *string `xml:"IPAdd,omitempty" json:"IPAdd,omitempty"`

	KYCStatus *string `xml:"KYCStatus,omitempty" json:"KYCStatus,omitempty"`

	MemberId *string `xml:"MemberId,omitempty" json:"MemberId,omitempty"`

	MinRedeem *string `xml:"MinRedeem,omitempty" json:"MinRedeem,omitempty"`

	MobileNo *string `xml:"MobileNo,omitempty" json:"MobileNo,omitempty"`

	OrderId *string `xml:"OrderId,omitempty" json:"OrderId,omitempty"`

	OrderVal *string `xml:"OrderVal,omitempty" json:"OrderVal,omitempty"`

	Param1 *string `xml:"Param1,omitempty" json:"Param1,omitempty"`

	Param2 *string `xml:"Param2,omitempty" json:"Param2,omitempty"`

	Param3 *string `xml:"Param3,omitempty" json:"Param3,omitempty"`

	PassKey *string `xml:"PassKey,omitempty" json:"PassKey,omitempty"`

	Password *string `xml:"Password,omitempty" json:"Password,omitempty"`

	RedeemDate *string `xml:"RedeemDate,omitempty" json:"RedeemDate,omitempty"`

	RedemptionAmt *string `xml:"RedemptionAmt,omitempty" json:"RedemptionAmt,omitempty"`

	RefNo *string `xml:"RefNo,omitempty" json:"RefNo,omitempty"`

	Remarks *string `xml:"Remarks,omitempty" json:"Remarks,omitempty"`

	SchemeCd *string `xml:"SchemeCd,omitempty" json:"SchemeCd,omitempty"`

	SubBrCode *string `xml:"SubBrCode,omitempty" json:"SubBrCode,omitempty"`

	TransCode *string `xml:"TransCode,omitempty" json:"TransCode,omitempty"`

	TransNo *string `xml:"TransNo,omitempty" json:"TransNo,omitempty"`

	UserID *string `xml:"UserID,omitempty" json:"UserID,omitempty"`
}

type SwitchOrder struct {
	AllUnitFlag *string `xml:"AllUnitFlag,omitempty" json:"AllUnitFlag,omitempty"`

	BuySell *string `xml:"BuySell,omitempty" json:"BuySell,omitempty"`

	BuySellType *string `xml:"BuySellType,omitempty" json:"BuySellType,omitempty"`

	ClientCode *string `xml:"ClientCode,omitempty" json:"ClientCode,omitempty"`

	DPTxn *string `xml:"DPTxn,omitempty" json:"DPTxn,omitempty"`

	EUIN *string `xml:"EUIN,omitempty" json:"EUIN,omitempty"`

	EUINVal *string `xml:"EUINVal,omitempty" json:"EUINVal,omitempty"`

	Filler1 *string `xml:"Filler1,omitempty" json:"Filler1,omitempty"`

	Filler2 *string `xml:"Filler2,omitempty" json:"Filler2,omitempty"`

	Filler3 *string `xml:"Filler3,omitempty" json:"Filler3,omitempty"`

	Filler4 *string `xml:"Filler4,omitempty" json:"Filler4,omitempty"`

	Filler5 *string `xml:"Filler5,omitempty" json:"Filler5,omitempty"`

	Filler6 *string `xml:"Filler6,omitempty" json:"Filler6,omitempty"`

	FolioNo *string `xml:"FolioNo,omitempty" json:"FolioNo,omitempty"`

	FromSchemeCd *string `xml:"FromSchemeCd,omitempty" json:"FromSchemeCd,omitempty"`

	IPAdd *string `xml:"IPAdd,omitempty" json:"IPAdd,omitempty"`

	KYCStatus *string `xml:"KYCStatus,omitempty" json:"KYCStatus,omitempty"`

	MemberId *string `xml:"MemberId,omitempty" json:"MemberId,omitempty"`

	MinRedeem *string `xml:"MinRedeem,omitempty" json:"MinRedeem,omitempty"`

	OrderId *string `xml:"OrderId,omitempty" json:"OrderId,omitempty"`

	OrderVal *string `xml:"OrderVal,omitempty" json:"OrderVal,omitempty"`

	Param1 *string `xml:"Param1,omitempty" json:"Param1,omitempty"`

	Param2 *string `xml:"Param2,omitempty" json:"Param2,omitempty"`

	Param3 *string `xml:"Param3,omitempty" json:"Param3,omitempty"`

	PassKey *string `xml:"PassKey,omitempty" json:"PassKey,omitempty"`

	Password *string `xml:"Password,omitempty" json:"Password,omitempty"`

	Remarks *string `xml:"Remarks,omitempty" json:"Remarks,omitempty"`

	SubBrCode *string `xml:"SubBrCode,omitempty" json:"SubBrCode,omitempty"`

	SwitchUnits *string `xml:"SwitchUnits,omitempty" json:"SwitchUnits,omitempty"`

	ToSchemeCd *string `xml:"ToSchemeCd,omitempty" json:"ToSchemeCd,omitempty"`

	TransCode *string `xml:"TransCode,omitempty" json:"TransCode,omitempty"`

	TransNo *string `xml:"TransNo,omitempty" json:"TransNo,omitempty"`

	UserID *string `xml:"UserID,omitempty" json:"UserID,omitempty"`
}

type SipOrder struct {
	ClientCode *string `xml:"ClientCode,omitempty" json:"ClientCode,omitempty"`

	DPC *string `xml:"DPC,omitempty" json:"DPC,omitempty"`

	DPTxnMode *string `xml:"DPTxnMode,omitempty" json:"DPTxnMode,omitempty"`

	Euin *string `xml:"Euin,omitempty" json:"Euin,omitempty"`

	EuinVal *string `xml:"EuinVal,omitempty" json:"EuinVal,omitempty"`

	Filler1 *string `xml:"Filler1,omitempty" json:"Filler1,omitempty"`

	Filler2 *string `xml:"Filler2,omitempty" json:"Filler2,omitempty"`

	Filler3 *string `xml:"Filler3,omitempty" json:"Filler3,omitempty"`

	Filler4 *string `xml:"Filler4,omitempty" json:"Filler4,omitempty"`

	Filler5 *string `xml:"Filler5,omitempty" json:"Filler5,omitempty"`

	Filler6 *string `xml:"Filler6,omitempty" json:"Filler6,omitempty"`

	FirstOrderFlag *string `xml:"FirstOrderFlag,omitempty" json:"FirstOrderFlag,omitempty"`

	FolioNo *string `xml:"FolioNo,omitempty" json:"FolioNo,omitempty"`

	FrequencyAllowed *string `xml:"FrequencyAllowed,omitempty" json:"FrequencyAllowed,omitempty"`

	FrequencyType *string `xml:"FrequencyType,omitempty" json:"FrequencyType,omitempty"`

	IPAdd *string `xml:"IPAdd,omitempty" json:"IPAdd,omitempty"`

	InstallmentAmount *string `xml:"InstallmentAmount,omitempty" json:"InstallmentAmount,omitempty"`

	InternalRefNo *string `xml:"InternalRefNo,omitempty" json:"InternalRefNo,omitempty"`

	MemberCode *string `xml:"MemberCode,omitempty" json:"MemberCode,omitempty"`

	NoOfInstallments *string `xml:"NoOfInstallments,omitempty" json:"NoOfInstallments,omitempty"`

	Param1 *string `xml:"Param1,omitempty" json:"Param1,omitempty"`

	Param2 *string `xml:"Param2,omitempty" json:"Param2,omitempty"`

	Param3 *string `xml:"Param3,omitempty" json:"Param3,omitempty"`

	PassKey *string `xml:"PassKey,omitempty" json:"PassKey,omitempty"`

	Password *string `xml:"Password,omitempty" json:"Password,omitempty"`

	RegId *string `xml:"RegId,omitempty" json:"RegId,omitempty"`

	Remarks *string `xml:"Remarks,omitempty" json:"Remarks,omitempty"`

	SchemeCode *string `xml:"SchemeCode,omitempty" json:"SchemeCode,omitempty"`

	StartDate *string `xml:"StartDate,omitempty" json:"StartDate,omitempty"`

	SubberCode *string `xml:"SubberCode,omitempty" json:"SubberCode,omitempty"`

	TransMode *string `xml:"TransMode,omitempty" json:"TransMode,omitempty"`

	TransactionCode *string `xml:"TransactionCode,omitempty" json:"TransactionCode,omitempty"`

	UniqueRefNo *string `xml:"UniqueRefNo,omitempty" json:"UniqueRefNo,omitempty"`

	UserID *string `xml:"UserID,omitempty" json:"UserID,omitempty"`
}

type XsipOrder struct {
	Brokerage *string `xml:"Brokerage,omitempty" json:"Brokerage,omitempty"`

	ClientCode *string `xml:"ClientCode,omitempty" json:"ClientCode,omitempty"`

	DPC *string `xml:"DPC,omitempty" json:"DPC,omitempty"`

	DpTxnMode *string `xml:"DpTxnMode,omitempty" json:"DpTxnMode,omitempty"`

	Euin *string `xml:"Euin,omitempty" json:"Euin,omitempty"`

	EuinVal *string `xml:"EuinVal,omitempty" json:"EuinVal,omitempty"`

	Filler1 *string `xml:"Filler1,omitempty" json:"Filler1,omitempty"`

	Filler2 *string `xml:"Filler2,omitempty" json:"Filler2,omitempty"`

	Filler3 *string `xml:"Filler3,omitempty" json:"Filler3,omitempty"`

	Filler4 *string `xml:"Filler4,omitempty" json:"Filler4,omitempty"`

	Filler5 *string `xml:"Filler5,omitempty" json:"Filler5,omitempty"`

	Filler6 *string `xml:"Filler6,omitempty" json:"Filler6,omitempty"`

	FirstOrderFlag *string `xml:"FirstOrderFlag,omitempty" json:"FirstOrderFlag,omitempty"`

	FolioNo *string `xml:"FolioNo,omitempty" json:"FolioNo,omitempty"`

	FrequencyAllowed *string `xml:"FrequencyAllowed,omitempty" json:"FrequencyAllowed,omitempty"`

	FrequencyType *string `xml:"FrequencyType,omitempty" json:"FrequencyType,omitempty"`

	IPAdd *string `xml:"IPAdd,omitempty" json:"IPAdd,omitempty"`

	InstallmentAmount *string `xml:"InstallmentAmount,omitempty" json:"InstallmentAmount,omitempty"`

	InternalRefNo *string `xml:"InternalRefNo,omitempty" json:"InternalRefNo,omitempty"`

	MandateID *string `xml:"MandateID,omitempty" json:"MandateID,omitempty"`

	MemberCode *string `xml:"MemberCode,omitempty" json:"MemberCode,omitempty"`

	NoOfInstallment *string `xml:"NoOfInstallment,omitempty" json:"NoOfInstallment,omitempty"`

	Param1 *string `xml:"Param1,omitempty" json:"Param1,omitempty"`

	Param2 *string `xml:"Param2,omitempty" json:"Param2,omitempty"`

	Param3 *string `xml:"Param3,omitempty" json:"Param3,omitempty"`

	PassKey *string `xml:"PassKey,omitempty" json:"PassKey,omitempty"`

	Password *string `xml:"Password,omitempty" json:"Password,omitempty"`

	Remarks *string `xml:"Remarks,omitempty" json:"Remarks,omitempty"`

	SchemeCode *string `xml:"SchemeCode,omitempty" json:"SchemeCode,omitempty"`

	StartDate *string `xml:"StartDate,omitempty" json:"StartDate,omitempty"`

	SubberCode *string `xml:"SubberCode,omitempty" json:"SubberCode,omitempty"`

	TransMode *string `xml:"TransMode,omitempty" json:"TransMode,omitempty"`

	TransactionCode *string `xml:"TransactionCode,omitempty" json:"TransactionCode,omitempty"`

	UniqueRefNo *string `xml:"UniqueRefNo,omitempty" json:"UniqueRefNo,omitempty"`

	UserId *string `xml:"UserId,omitempty" json:"UserId,omitempty"`

	XsipRegID *string `xml:"XsipRegID,omitempty" json:"XsipRegID,omitempty"`
}

type MFOrderEntry interface {
	GetPassword(request *GetPassword) (*GetPasswordResponse, error)

	GetPasswordContext(ctx context.Context, request *GetPassword) (*GetPasswordResponse, error)

	OrderEntry(request *OrderEntry) (*OrderEntryResponse, error)

	OrderEntryContext(ctx context.Context, request *OrderEntry) (*OrderEntryResponse, error)

	OrderEntryParam(request *OrderEntryParam) (*OrderEntryParamResponse, error)

	OrderEntryParamContext(ctx context.Context, request *OrderEntryParam) (*OrderEntryParamResponse, error)

	SpreadOrderEntry(request *SpreadOrderEntry) (*SpreadOrderEntryResponse, error)

	SpreadOrderEntryContext(ctx context.Context, request *SpreadOrderEntry) (*SpreadOrderEntryResponse, error)

	SpreadOrderEntryParam(request *SpreadOrderEntryParam) (*SpreadOrderEntryParamResponse, error)

	SpreadOrderEntryParamContext(ctx context.Context, request *SpreadOrderEntryParam) (*SpreadOrderEntryParamResponse, error)

	SwitchOrderEntry(request *SwitchOrderEntry) (*SwitchOrderEntryResponse, error)

	SwitchOrderEntryContext(ctx context.Context, request *SwitchOrderEntry) (*SwitchOrderEntryResponse, error)

	SwitchOrderEntryParam(request *SwitchOrderEntryParam) (*SwitchOrderEntryParamResponse, error)

	SwitchOrderEntryParamContext(ctx context.Context, request *SwitchOrderEntryParam) (*SwitchOrderEntryParamResponse, error)

	SipOrderEntry(request *SipOrderEntry) (*SipOrderEntryResponse, error)

	SipOrderEntryContext(ctx context.Context, request *SipOrderEntry) (*SipOrderEntryResponse, error)

	SipOrderEntryParam(request *SipOrderEntryParam) (*SipOrderEntryParamResponse, error)

	SipOrderEntryParamContext(ctx context.Context, request *SipOrderEntryParam) (*SipOrderEntryParamResponse, error)

	XsipOrderEntry(request *XsipOrderEntry) (*XsipOrderEntryResponse, error)

	XsipOrderEntryContext(ctx context.Context, request *XsipOrderEntry) (*XsipOrderEntryResponse, error)

	XsipOrderEntryParam(request *XsipOrderEntryParam) (*XsipOrderEntryParamResponse, error)

	XsipOrderEntryParamContext(ctx context.Context, request *XsipOrderEntryParam) (*XsipOrderEntryParamResponse, error)
}

type mFOrderEntry struct {
	client *soap.Client
}

func NewMFOrderEntry(client *soap.Client) MFOrderEntry {
	return &mFOrderEntry{
		client: client,
	}
}

func (service *mFOrderEntry) GetPasswordContext(ctx context.Context, request *GetPassword) (*GetPasswordResponse, error) {
	response := new(GetPasswordResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *mFOrderEntry) GetPassword(request *GetPassword) (*GetPasswordResponse, error) {
	return service.GetPasswordContext(
		context.Background(),
		request,
	)
}

func (service *mFOrderEntry) OrderEntryContext(ctx context.Context, request *OrderEntry) (*OrderEntryResponse, error) {
	response := new(OrderEntryResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *mFOrderEntry) OrderEntry(request *OrderEntry) (*OrderEntryResponse, error) {
	return service.OrderEntryContext(
		context.Background(),
		request,
	)
}

func (service *mFOrderEntry) OrderEntryParamContext(ctx context.Context, request *OrderEntryParam) (*OrderEntryParamResponse, error) {
	response := new(OrderEntryParamResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *mFOrderEntry) OrderEntryParam(request *OrderEntryParam) (*OrderEntryParamResponse, error) {
	return service.OrderEntryParamContext(
		context.Background(),
		request,
	)
}

func (service *mFOrderEntry) SpreadOrderEntryContext(ctx context.Context, request *SpreadOrderEntry) (*SpreadOrderEntryResponse, error) {
	response := new(SpreadOrderEntryResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *mFOrderEntry) SpreadOrderEntry(request *SpreadOrderEntry) (*SpreadOrderEntryResponse, error) {
	return service.SpreadOrderEntryContext(
		context.Background(),
		request,
	)
}

func (service *mFOrderEntry) SpreadOrderEntryParamContext(ctx context.Context, request *SpreadOrderEntryParam) (*SpreadOrderEntryParamResponse, error) {
	response := new(SpreadOrderEntryParamResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *mFOrderEntry) SpreadOrderEntryParam(request *SpreadOrderEntryParam) (*SpreadOrderEntryParamResponse, error) {
	return service.SpreadOrderEntryParamContext(
		context.Background(),
		request,
	)
}

func (service *mFOrderEntry) SwitchOrderEntryContext(ctx context.Context, request *SwitchOrderEntry) (*SwitchOrderEntryResponse, error) {
	response := new(SwitchOrderEntryResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *mFOrderEntry) SwitchOrderEntry(request *SwitchOrderEntry) (*SwitchOrderEntryResponse, error) {
	return service.SwitchOrderEntryContext(
		context.Background(),
		request,
	)
}

func (service *mFOrderEntry) SwitchOrderEntryParamContext(ctx context.Context, request *SwitchOrderEntryParam) (*SwitchOrderEntryParamResponse, error) {
	response := new(SwitchOrderEntryParamResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *mFOrderEntry) SwitchOrderEntryParam(request *SwitchOrderEntryParam) (*SwitchOrderEntryParamResponse, error) {
	return service.SwitchOrderEntryParamContext(
		context.Background(),
		request,
	)
}

func (service *mFOrderEntry) SipOrderEntryContext(ctx context.Context, request *SipOrderEntry) (*SipOrderEntryResponse, error) {
	response := new(SipOrderEntryResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *mFOrderEntry) SipOrderEntry(request *SipOrderEntry) (*SipOrderEntryResponse, error) {
	return service.SipOrderEntryContext(
		context.Background(),
		request,
	)
}

func (service *mFOrderEntry) SipOrderEntryParamContext(ctx context.Context, request *SipOrderEntryParam) (*SipOrderEntryParamResponse, error) {
	response := new(SipOrderEntryParamResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *mFOrderEntry) SipOrderEntryParam(request *SipOrderEntryParam) (*SipOrderEntryParamResponse, error) {
	return service.SipOrderEntryParamContext(
		context.Background(),
		request,
	)
}

func (service *mFOrderEntry) XsipOrderEntryContext(ctx context.Context, request *XsipOrderEntry) (*XsipOrderEntryResponse, error) {
	response := new(XsipOrderEntryResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *mFOrderEntry) XsipOrderEntry(request *XsipOrderEntry) (*XsipOrderEntryResponse, error) {
	return service.XsipOrderEntryContext(
		context.Background(),
		request,
	)
}

func (service *mFOrderEntry) XsipOrderEntryParamContext(ctx context.Context, request *XsipOrderEntryParam) (*XsipOrderEntryParamResponse, error) {
	response := new(XsipOrderEntryParamResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *mFOrderEntry) XsipOrderEntryParam(request *XsipOrderEntryParam) (*XsipOrderEntryParamResponse, error) {
	return service.XsipOrderEntryParamContext(
		context.Background(),
		request,
	)
}
